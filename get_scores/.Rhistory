neighbor_neighbor <- kNNG$nn.index[neighbor,]
enough_overlap <- length(intersect(cell_neighbor,neighbor_neighbor))/k*100 >= percent_overlap
to_merge[[as.character(cell)]] <- ifelse(enough_overlap,
c(to_merge[[as.character(cell)]],as.character(neighbor)),
to_merge[[as.character(cell)]])
}
}
}
all(lengths(to_merge)==1)
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv")
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv")
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv")
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv")
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",")
View(pierre)
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",", header = T, row.names = 1)
View(pierre)
df_pierre <- data.frame(expression = pierre[1,],
condition = colnames(pierre))
pierre[1,]
unname(pierre[1,])
df_pierre <- data.frame(expression = unname(pierre[1,]),
condition = colnames(pierre))
df_pierre <- data.frame(expression = unname(unname(pierre[1,])),
condition = colnames(pierre))
df_pierre <- data.frame(expression = unname(pierre[1,]),
condition = colnames(pierre))
View(df_pierre)
colnames(pierre)
df_pierre <- data.frame(expression = unname(pierre[1,]))
View(df_pierre)
df_pierre <- data.frame(expression = t(unname(pierre[1,])))
View(df_pierre)
df_pierre <- data.frame(expression = t(unname(pierre[1,])),
condition = colnames(pierre))
View(df_pierre)
library(ggplot2)
ggplot(df_pierre, aes(x = condition, y = expression)) + geom_bar()
ggplot(df_pierre, aes(x = condition, y = expression)) + geom_violin()
View(df_pierre)
type(df_pierre$EOMES)
typeof(df_pierre$EOMES)
ggplot(df_pierre, aes(x = condition, y = EOMES)) + geom_violin()
t(unname(pierre[1,]))
colnames(df_pierre) <- c("expression","condition")
ggplot(df_pierre, aes(x = condition, y = expression)) + geom_violin()
rep(0,10)
df_pierre <- data.frame(expression = t(unname(pierre[1,])),
condition = colnames(pierre),
timing = "prep")
View(df_pierre)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre),
timing = "prep")
View(df_pierre)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = "prep")
View(df_pierre)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = "pre")
View(pierre)
View(df_pierre)
df$pierre <- gsub(grep("post",df$pierre), "post", df_pierre$condition)
grep("post",df$pierre)
grep("post",df_pierre$condition)
df_pierre$condition[grep("post",df_pierre$condition)]
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
df_pierre$timing[grep("post",df_pierre$condition)]
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = "pre")
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
grep("post",df_pierre$condition)
View(df_pierre)
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",", header = T, row.names = 1, stringsAsFactors = F)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = "pre")
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
typeof(df_pierre$timing)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = "pre")
typeof(df_pierre$timing)
df_pierre$timing[grep("post",df_pierre$condition)] <- factor("post")
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = factor("pre",levels="pre","post"))
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
View(df_pierre)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = factor("pre",levels="pre","post"))
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
View(df_pierre)
grep("post",df_pierre$condition)
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = factor("pre",levels="pre","post"))
df_pierre$timing[grep("post",df_pierre$condition)]
df_pierre <- data.frame(expression = t(unname(pierre[1,1:58])),
condition = colnames(pierre)[1:58],
timing = factor("pre",levels=c("pre","post")))
df_pierre$timing[grep("post",df_pierre$condition)] <- "post"
View(df_pierre)
colnames(df_pierre) <- c("expression","condition", "timing")
ggplot(df_pierre, aes(x = timing, y = expression)) + geom_violin()
t_ex <- grep("Tex",df_pierre$condition)
t_pesc <- grep("Tp.esc",df_pierre$condition)
t_fesc <- grep("Tf.esc",df_pierre$condition)
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) + geom_violin()
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) + geom_point()
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) + geom_violin() +geom_point()
ggplot(df_pierre[t_pesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point()
ggplot(df_pierre[t_fesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point()
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point()
ggplot(df_pierre[t_pesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point()
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
title("T exhausted")
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
title("T exhausted")
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
ggtitle("T exhausted")
ggplot(df_pierre[t_pesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
ggtitle("T p escaped")
ggplot(df_pierre[t_fesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
ggtitle("T f escaped")
ggplot(df_pierre[t_ex,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
ylim(0,100) +
ggtitle("T exhausted")
ggplot(df_pierre[t_pesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
ylim(0,100) +
ggtitle("T p escaped")
ggplot(df_pierre[t_fesc,], aes(x = timing, y = expression)) +
geom_violin() +
geom_point() +
ylim(0,100) +
ggtitle("T f escaped")
pca <- prcomp(t(pierre))
View(df_pierre)
pca_pierre <- data.frame(0, names=c("cell1","cell2","cell3","cell4","cell5","cell6"))
cell <- c("cell1","cell2","cell3","cell4","cell5","cell6")
apply(pierre[,cell1],1,median)
cell1 <- 1:14
cell2 <- 15:21
cell3 <- 22:35
cell4 <- 36:42
cell5 <- 43:50
cell6 <- 51:58
apply(pierre[,cell1],1,median)
sapply(cell, function(y) {apply(pierre[,cell1],1,median)})
pca_pierre <- sapply(cell, function(y) {apply(pierre[,cell1],1,median)})
View(pca_pierre)
apply(pca_pierre, 1, function(x) {all(is.na(x))})
pca_pierre <- sapply(cell, function(y) {apply(pierre[,cell1],1,function(x) median(x, na.rm = T))})
View(pca_pierre)
View(pca_pierre)
View(pca_pierre)
pca <- prcomp(t(pca_pierre))
View(pca)
plot(pca$rotation[1,],pca$rotation[2,])
pca$rotation
pca <- prcomp(pca_pierre)
View(pca)
pca$rotation
View(pca_pierre)
View(pierre)
pca_pierre <- sapply(cell, function(y) {apply(pierre[,y],1,function(x) median(x, na.rm = T))})
pca <- prcomp(pca_pierre)
cell <- list(cell1,cell2,cell3,cell4,cell5,cell6)
pca_pierre <- sapply(cell, function(y) {apply(pierre[,y],1,function(x) median(x, na.rm = T))})
pca <- prcomp(pca_pierre)
pca$rotation
plot(pca$rotation[1,],pca$rotation[2,])
plot(pca$rotation[,1],pca$rotation[,1])
plot(pca$rotation[,1],pca$rotation[,2])
plot(pca$rotation[,1],pca$rotation[,2], col=ra)
plot(pca$rotation[,1],pca$rotation[,2], col=rainbow(6))
pca_df <- data.frame(PC1=pca$rotation[,1],
PC2=pca$rotation[,2])
ggplot(pca_df, aes(x=PC1,y=PC2)) +geom_point()
as.character(cell)
pca_df <- data.frame(PC1=pca$rotation[,1],
PC2=pca$rotation[,2],
label=c("c1","c2","c3","c4","c5","c6"))
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=0, vjust=0)
pca_df <- data.frame(PC1=pca$rotation[,1],
PC2=pca$rotation[,2],
label=c("Tex_pre","Tpesc_pre","Tfesc_pre","Tex_post","Tpesc_post","Tfesc_post"))
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=0, vjust=0)
View(pierre)
heatmap(pierre)
View(pierre)
View(pca_pierre)
cell_name <- c("Tex_pre","Tpesc_pre","Tfesc_pre","Tex_post","Tpesc_post","Tfesc_post")
colnames(pca_pierre) <- cell_name
colnames(pca_pierre) <- cell_name
heatmap(pca_pierre)
# load the data with the function read.table() and pay attention to path, sep, header, row.names
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",", header = T, row.names = 1)
# load the data with the function read.table() and pay attention to path, sep, header, row.names
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",", header = T, row.names = 1)
View(pierre)
timing <- rep("ctrl",ncol(pierre)*nrow(pierre))
timing <- rep("ctrl",ncol(pierre))
timing <- rep("ctrl",ncol(pierre))
timing[grep("pre",colnames(pierre))] <- "pre"
timing[grep("post",colnames(pierre))] <- "post" # prepare the timing vector
type <- colnames(pierre)# prepare the cell type vector
type
strsplit(type, ".DAA")
sapply(type,function(x) strsplit(x, ".DAA"))
type <- colnames(pierre)[1:58]# prepare the cell type vector
type
sapply(type,function(x) strsplit(x, ".DAA"))
colnames(pierre)[59:68]
ctrl <- grep("Tr",colnames(pierre))
type <- colnames(pierre)[-ctrl] # prepare the cell type vector
sapply(type,function(x) strsplit(x, ".DAA"))
lapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1])
sapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1])
unname(sapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1]))
type <- unname(sapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1]))# prepare the cell type vector
type <- c(type, colnames(pierre)[ctrl])# prepare the cell type vector
df_pierre <- data.frame( # write the different columns
marker = rep(rownames(pierre), each=ncol(pierre)), # je "déplie" pierre pour chaque marker
cell_type = rep(colnames(pierre), times=nrow(pierre)),
treatment_time = rep(timing, times=nrow(pierre)),
cell_type = rep(type, times=nrow(pierre)),
)
# ====
# Prepare the data
# ====
# load the data with the function read.table() and pay attention to path, sep, header, row.names
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",", header = T, row.names = 1)
timing <- rep("ctrl",ncol(pierre))
timing[grep("pre",colnames(pierre))] <- "pre"
timing[grep("post",colnames(pierre))] <- "post" # prepare the timing vector
ctrl <- grep("Tr",colnames(pierre))
type <- colnames(pierre)[-ctrl]
type <- unname(sapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1]))
type <- c(type, colnames(pierre)[ctrl])# prepare the cell type vector
df_pierre <- data.frame( # write the different columns
marker = rep(rownames(pierre), each=ncol(pierre)), # je "déplie" pierre pour chaque marker
cell_type = rep(colnames(pierre), times=nrow(pierre)),
treatment_time = rep(timing, times=nrow(pierre)),
cell_type = rep(type, times=nrow(pierre)),
)
rownames(pierre)
rep(rownames(pierre), each=ncol(pierre))
rep(colnames(pierre), times=nrow(pierre))
rep(type, times=nrow(pierre))
rep(timing, times=nrow(pierre))
pierre
unlist(pierre)
unlist(t(pierre))
unlist(data.frame(t(pierre)))
df_pierre <- data.frame( # write the different columns
marker = rep(rownames(pierre), each=ncol(pierre)), # je "déplie" pierre pour chaque marker
cell_type = rep(type, times=nrow(pierre)),
treatment_time = rep(timing, times=nrow(pierre)),
expression = unlist(data.frame(t(pierre)))
)
View(df_pierre)
strsplit(colnames(pierre)[ctrl],".")
strsplit(colnames(pierre)[ctrl],".")
strsplit(colnames(pierre)[ctrl],"r.")
strsplit(colnames(pierre)[ctrl],".")
test=colnames(pierre)[ctrl]
test
strtrim(test,2)
# reformat in a data.frame with 4 columns : percentage of expression, name of marker, cell type, treatment time
timing <- rep("ctrl",ncol(pierre))
timing[grep("pre",colnames(pierre))] <- "pre"
timing[grep("post",colnames(pierre))] <- "post" # prepare the timing vector
ctrl <- grep("Tr",colnames(pierre))
type <- colnames(pierre)[-ctrl]
type <- unname(sapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1]))
type <- c(type, strtrim(colnames(pierre)[ctrl],2))# prepare the cell type vector
df_pierre <- data.frame( # write the different columns
marker = rep(rownames(pierre), each=ncol(pierre)), # je "déplie" pierre pour chaque marker
cell_type = rep(type, times=nrow(pierre)),
treatment_time = rep(timing, times=nrow(pierre)),
expression = unlist(data.frame(t(pierre)))
)
View(df_pierre)
View(df_pierre)
ggplot(df_pierre, aes(x = treatment_time, y = expression)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T exhausted")
ggplot(df_pierre, aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T exhausted")
df_pierre$cell_type
t_ex <- grep("Tex",df_pierre$cell_type)
t_pesc <- grep("Tp.esc",df_pierre$cell_type)
t_fesc <- grep("Tf.esc",df_pierre$cell_type)
1008+576+504
t_ex <- grep("Tex",df_pierre$cell_type)
t_pesc <- grep("Tp.esc",df_pierre$cell_type)
t_fesc <- grep("Tf.esc",df_pierre$cell_type)
ggplot(df_pierre[t_ex,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T exhausted")
ggplot(df_pierre[t_pesc,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T p escaped")
ggplot(df_pierre[t_fesc], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T f escaped")
ggplot(df_pierre[t_pesc,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T p escaped")
ggplot(df_pierre[t_fesc,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T f escaped")
# Violin plot entre conditions intra timing
pre <- df_pierre$treatment_time=="pre"
post <- df_pierre$treatment_time=="post"
# Violin plot entre conditions intra timing
pre <- df_pierre$treatment_time=="pre" | df_pierre$treatment_time=="ctrl"
post <- df_pierre$treatment_time=="post" | df_pierre$treatment_time=="ctrl"
ggplot(df_pierre[pre,], aes(x = cell_type, y = expression, fill = cell_type)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T f escaped")
# Violin plot entre conditions intra timing
pre <- df_pierre$treatment_time=="pre" | df_pierre$treatment_time=="ctrl"
post <- df_pierre$treatment_time=="post" | df_pierre$treatment_time=="ctrl"
ggplot(df_pierre[pre,], aes(x = cell_type, y = expression, fill = cell_type)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("Pre")
ggplot(df_pierre[post,], aes(x = cell_type, y = expression, fill = cell_type)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("Post")
cell1 <- 1:14
cell2 <- 15:21
cell3 <- 22:35
cell4 <- 36:42
cell5 <- 43:50
cell6 <- 51:58
cell7 <- 59:68
cell_name <- c("Tex_pre","Tpesc_pre","Tfesc_pre","Tex_post","Tpesc_post","Tfesc_post","ctrl")
pca_pierre <- sapply(cell, function(y) {apply(pierre[,y],1,function(x) median(x, na.rm = T))})
cell <- list(cell1,cell2,cell3,cell4,cell5,cell6,cell7)
cell_name <- c("Tex_pre","Tpesc_pre","Tfesc_pre","Tex_post","Tpesc_post","Tfesc_post","ctrl")
pca_pierre <- sapply(cell, function(y) {apply(pierre[,y],1,function(x) median(x, na.rm = T))})
colnames(pca_pierre) <- cell_name
pca <- prcomp(pca_pierre)
pca_df <- data.frame(PC1=pca$rotation[,1],
PC2=pca$rotation[,2],
label=cell_name)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=0, vjust=0)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=1, vjust=0)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=-1, vjust=0)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=-0.5, vjust=0)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=-0.5, vjust=0.5)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=-0.5, vjust=-0.5)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=-0.3, vjust=-0.5)
ggplot(pca_df, aes(x=PC1,y=PC2)) + geom_point() + geom_text(aes(label=label),hjust=-0.3, vjust=-0.3)
heatmap(pca_pierre)
heatmap(pca_pierre, scale = "none")
heatmap(pca_pierre, scale = "none", Rowv = F)
heatmap(pca_pierre, scale = "none", Rowv = NULL)
heatmap(pca_pierre, scale = "none", Rowv = NA)
# ====
# Heatmap
# ====
heatmap(pca_pierre, scale = "none", Rowv = NA)
# ====
# Prepare the data
# ====
# load the data with the function read.table() and pay attention to path, sep, header, row.names
pierre <- read.table(file = "/Users/elise/Downloads/HM_TOTAL_OK.csv", sep = ",", header = T, row.names = 1)
# 36 markers measured on 68 cell type/condition/treatment time
# reformat in a data.frame with 4 columns : percentage of expression, name of marker, cell type, treatment time
timing <- rep("ctrl",ncol(pierre))
timing[grep("pre",colnames(pierre))] <- "pre"
timing[grep("post",colnames(pierre))] <- "post" # prepare the timing vector
ctrl <- grep("Tr",colnames(pierre))
type <- colnames(pierre)[-ctrl]
type <- unname(sapply(sapply(type,function(x) strsplit(x, ".DAA")), function(x) x[1]))
type <- c(type, strtrim(colnames(pierre)[ctrl],2))# prepare the cell type vector
df_pierre <- data.frame( # write the different columns
marker = rep(rownames(pierre), each=ncol(pierre)), # je "déplie" pierre pour chaque marker
cell_type = rep(type, times=nrow(pierre)),
treatment_time = rep(timing, times=nrow(pierre)),
expression = unlist(data.frame(t(pierre)))
)
# ====
# Compare expression
# ====
# Violin plot pre/post
library(ggplot2)
t_ex <- grep("Tex",df_pierre$cell_type)
t_pesc <- grep("Tp.esc",df_pierre$cell_type)
t_fesc <- grep("Tf.esc",df_pierre$cell_type)
ggplot(df_pierre[t_ex,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T exhausted")
ggplot(df_pierre[t_pesc,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T p escaped")
ggplot(df_pierre[t_fesc,], aes(x = treatment_time, y = expression, fill = treatment_time)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("T f escaped")
# Violin plot entre conditions intra timing
pre <- df_pierre$treatment_time=="pre" | df_pierre$treatment_time=="ctrl"
post <- df_pierre$treatment_time=="post" | df_pierre$treatment_time=="ctrl"
ggplot(df_pierre[pre,], aes(x = cell_type, y = expression, fill = cell_type)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("Pre")
ggplot(df_pierre[post,], aes(x = cell_type, y = expression, fill = cell_type)) +
geom_violin() +
geom_point() +
ylim(0,100) +
facet_wrap( ~ marker) +
ggtitle("Post")
# ADD the pairing if you have the ID of each patient
# ====
# PCA
# ====
cell1 <- 1:14
cell2 <- 15:21
cell3 <- 22:35
cell4 <- 36:42
cell5 <- 43:50
cell6 <- 51:58
cell7 <- 59:68
cell <- list(cell1,cell2,cell3,cell4,cell5,cell6,cell7)
cell_name <- c("Tex_pre","Tpesc_pre","Tfesc_pre","Tex_post","Tpesc_post","Tfesc_post","ctrl")
pca_pierre <- sapply(cell, function(y) {apply(pierre[,y],1,function(x) median(x, na.rm = T))})
# take the median for all markers for similar cells
colnames(pca_pierre) <- cell_name
pca <- prcomp(pca_pierre) # do the PCA
pca_df <- data.frame(PC1=pca$rotation[,1], # get the new coordinates
PC2=pca$rotation[,2],
label=cell_name)
ggplot(pca_df, aes(x=PC1,y=PC2)) + # plot it!
geom_point() +
geom_text(aes(label=label),hjust=-0.3, vjust=-0.3) +
geom_line(arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed"))
# ====
# Heatmap
# ====
heatmap(pca_pierre, scale = "none", Rowv = NA)
